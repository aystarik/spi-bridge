; SMT-LIBv2 description generated by Yosys 0.9+2406 (git sha1 261383d, clang  -fPIC -Os)
; yosys-smt2-module ufifo
(declare-sort |ufifo_s| 0)
(declare-fun |ufifo_is| (|ufifo_s|) Bool)
; yosys-smt2-wire wr_addr_next_next 2
(declare-fun |ufifo#0| (|ufifo_s|) (_ BitVec 2)) ; \wr_addr
(define-fun |ufifo#1| ((state |ufifo_s|)) (_ BitVec 2) (bvadd (|ufifo#0| state) #b10)) ; \wr_addr_next_next
(define-fun |ufifo_n wr_addr_next_next| ((state |ufifo_s|)) (_ BitVec 2) (|ufifo#1| state))
; yosys-smt2-wire wr_addr_next 2
(define-fun |ufifo#2| ((state |ufifo_s|)) (_ BitVec 2) (bvadd (|ufifo#0| state) #b01)) ; \wr_addr_next
(define-fun |ufifo_n wr_addr_next| ((state |ufifo_s|)) (_ BitVec 2) (|ufifo#2| state))
; yosys-smt2-register wr_addr 2
; yosys-smt2-wire wr_addr 2
(define-fun |ufifo_n wr_addr| ((state |ufifo_s|)) (_ BitVec 2) (|ufifo#0| state))
; yosys-smt2-output will_underflow 1
; yosys-smt2-register will_underflow 1
; yosys-smt2-wire will_underflow 1
(declare-fun |ufifo#3| (|ufifo_s|) (_ BitVec 1)) ; \will_underflow
(define-fun |ufifo_n will_underflow| ((state |ufifo_s|)) Bool (= ((_ extract 0 0) (|ufifo#3| state)) #b1))
; yosys-smt2-output will_overflow 1
; yosys-smt2-register will_overflow 1
; yosys-smt2-wire will_overflow 1
(declare-fun |ufifo#4| (|ufifo_s|) (_ BitVec 1)) ; \will_overflow
(define-fun |ufifo_n will_overflow| ((state |ufifo_s|)) Bool (= ((_ extract 0 0) (|ufifo#4| state)) #b1))
; yosys-smt2-wire w_write 1
(declare-fun |ufifo#5| (|ufifo_s|) Bool) ; \i_wr
(define-fun |ufifo#6| ((state |ufifo_s|)) Bool (not (or  (= ((_ extract 0 0) (|ufifo#4| state)) #b1) false))) ; $logic_not$ufifo.v:46$38_Y
(declare-fun |ufifo#7| (|ufifo_s|) Bool) ; \i_rd
(define-fun |ufifo#8| ((state |ufifo_s|)) Bool (or  (|ufifo#6| state) false  (|ufifo#7| state) false)) ; $logic_or$ufifo.v:46$39_Y
(define-fun |ufifo#9| ((state |ufifo_s|)) Bool (and (or  (|ufifo#5| state) false) (or  (|ufifo#8| state) false))) ; \w_write
(define-fun |ufifo_n w_write| ((state |ufifo_s|)) Bool (|ufifo#9| state))
; yosys-smt2-wire w_read 1
(define-fun |ufifo#10| ((state |ufifo_s|)) Bool (not (or  (= ((_ extract 0 0) (|ufifo#3| state)) #b1) false))) ; $0$formal$ufifo.v:247$20_CHECK[0:0]$175
(define-fun |ufifo#11| ((state |ufifo_s|)) Bool (and (or  (|ufifo#7| state) false) (or  (|ufifo#10| state) false))) ; \w_read
(define-fun |ufifo_n w_read| ((state |ufifo_s|)) Bool (|ufifo#11| state))
; yosys-smt2-register use_bypass 1
; yosys-smt2-wire use_bypass 1
(declare-fun |ufifo#12| (|ufifo_s|) (_ BitVec 1)) ; \use_bypass
(define-fun |ufifo_n use_bypass| ((state |ufifo_s|)) Bool (= ((_ extract 0 0) (|ufifo#12| state)) #b1))
; yosys-smt2-wire underflow 1
(declare-fun |ufifo#13| (|ufifo_s|) (_ BitVec 2)) ; \rd_addr_next
(define-fun |ufifo#14| ((state |ufifo_s|)) Bool (= (|ufifo#13| state) (|ufifo#0| state))) ; $eq$ufifo.v:57$45_Y
(define-fun |ufifo#15| ((state |ufifo_s|)) Bool (and (or  (|ufifo#7| state) false) (or  (|ufifo#14| state) false))) ; $logic_and$ufifo.v:57$46_Y
(define-fun |ufifo#16| ((state |ufifo_s|)) Bool (or  (= ((_ extract 0 0) (|ufifo#3| state)) #b1) false  (|ufifo#15| state) false)) ; \underflow
(define-fun |ufifo_n underflow| ((state |ufifo_s|)) Bool (|ufifo#16| state))
; yosys-smt2-register rd_addr_next 2
; yosys-smt2-wire rd_addr_next 2
(define-fun |ufifo_n rd_addr_next| ((state |ufifo_s|)) (_ BitVec 2) (|ufifo#13| state))
; yosys-smt2-register rd_addr 2
; yosys-smt2-wire rd_addr 2
(declare-fun |ufifo#17| (|ufifo_s|) (_ BitVec 2)) ; \rd_addr
(define-fun |ufifo_n rd_addr| ((state |ufifo_s|)) (_ BitVec 2) (|ufifo#17| state))
; yosys-smt2-output o_used 2
; yosys-smt2-register o_used 2
; yosys-smt2-wire o_used 2
(declare-fun |ufifo#18| (|ufifo_s|) (_ BitVec 2)) ; \o_used
(define-fun |ufifo_n o_used| ((state |ufifo_s|)) (_ BitVec 2) (|ufifo#18| state))
; yosys-smt2-output o_half_full 1
; yosys-smt2-wire o_half_full 1
(define-fun |ufifo_n o_half_full| ((state |ufifo_s|)) Bool (= ((_ extract 1 1) (|ufifo#18| state)) #b1))
; yosys-smt2-output o_half_empty 1
; yosys-smt2-wire o_half_empty 1
(declare-fun |ufifo#19| (|ufifo_s|) (_ BitVec 2)) ; \o_empty
(define-fun |ufifo_n o_half_empty| ((state |ufifo_s|)) Bool (= ((_ extract 1 1) (|ufifo#19| state)) #b1))
; yosys-smt2-output o_err 1
; yosys-smt2-wire o_err 1
(define-fun |ufifo#20| ((state |ufifo_s|)) Bool (not (or  (|ufifo#7| state) false))) ; $logic_not$ufifo.v:120$74_Y
(define-fun |ufifo#21| ((state |ufifo_s|)) Bool (and (or  (|ufifo#5| state) false) (or  (|ufifo#20| state) false))) ; $logic_and$ufifo.v:120$75_Y
(define-fun |ufifo#22| ((state |ufifo_s|)) Bool (and (or  (|ufifo#21| state) false) (or  (= ((_ extract 0 0) (|ufifo#4| state)) #b1) false))) ; \o_err
(define-fun |ufifo_n o_err| ((state |ufifo_s|)) Bool (|ufifo#22| state))
; yosys-smt2-output o_empty 2
; yosys-smt2-register o_empty 2
; yosys-smt2-wire o_empty 2
(define-fun |ufifo_n o_empty| ((state |ufifo_s|)) (_ BitVec 2) (|ufifo#19| state))
; yosys-smt2-output o_data 8
; yosys-smt2-wire o_data 8
(declare-fun |ufifo#23| (|ufifo_s|) (_ BitVec 8)) ; \fifo_data
(declare-fun |ufifo#24| (|ufifo_s|) (_ BitVec 8)) ; \bypass_data
(define-fun |ufifo#25| ((state |ufifo_s|)) (_ BitVec 8) (ite (= ((_ extract 0 0) (|ufifo#12| state)) #b1) (|ufifo#24| state) (|ufifo#23| state))) ; \o_data
(define-fun |ufifo_n o_data| ((state |ufifo_s|)) (_ BitVec 8) (|ufifo#25| state))
; yosys-smt2-wire need_bypass 1
(define-fun |ufifo#26| ((state |ufifo_s|)) Bool (and (or  (|ufifo#5| state) false) (or  (|ufifo#16| state) false))) ; \need_bypass
(define-fun |ufifo_n need_bypass| ((state |ufifo_s|)) Bool (|ufifo#26| state))
; yosys-smt2-input i_wr 1
; yosys-smt2-wire i_wr 1
(define-fun |ufifo_n i_wr| ((state |ufifo_s|)) Bool (|ufifo#5| state))
; yosys-smt2-input i_reset 1
; yosys-smt2-wire i_reset 1
(declare-fun |ufifo#27| (|ufifo_s|) Bool) ; \i_reset
(define-fun |ufifo_n i_reset| ((state |ufifo_s|)) Bool (|ufifo#27| state))
; yosys-smt2-input i_rd 1
; yosys-smt2-wire i_rd 1
(define-fun |ufifo_n i_rd| ((state |ufifo_s|)) Bool (|ufifo#7| state))
; yosys-smt2-input i_data 8
; yosys-smt2-wire i_data 8
(declare-fun |ufifo#28| (|ufifo_s|) (_ BitVec 8)) ; \i_data
(define-fun |ufifo_n i_data| ((state |ufifo_s|)) (_ BitVec 8) (|ufifo#28| state))
; yosys-smt2-input i_clk 1
; yosys-smt2-wire i_clk 1
; yosys-smt2-clock i_clk posedge
(declare-fun |ufifo#29| (|ufifo_s|) Bool) ; \i_clk
(define-fun |ufifo_n i_clk| ((state |ufifo_s|)) Bool (|ufifo#29| state))
; yosys-smt2-register fifo_data 8
; yosys-smt2-wire fifo_data 8
(define-fun |ufifo_n fifo_data| ((state |ufifo_s|)) (_ BitVec 8) (|ufifo#23| state))
; yosys-smt2-register f_state 2
; yosys-smt2-wire f_state 2
(declare-fun |ufifo#30| (|ufifo_s|) (_ BitVec 2)) ; \f_state
(define-fun |ufifo_n f_state| ((state |ufifo_s|)) (_ BitVec 2) (|ufifo#30| state))
; yosys-smt2-wire f_second_in_fifo 1
; yosys-smt2-anyconst ufifo#31 2 ufifo.v:0.0-0.0 f_const_addr
(declare-fun |ufifo#31| (|ufifo_s|) (_ BitVec 2)) ; \f_const_addr
(define-fun |ufifo#32| ((state |ufifo_s|)) (_ BitVec 2) (bvadd (|ufifo#31| state) #b01)) ; \f_next_addr
(define-fun |ufifo#33| ((state |ufifo_s|)) (_ BitVec 2) (bvsub (|ufifo#32| state) (|ufifo#17| state))) ; \f_distance_to_second
(define-fun |ufifo#34| ((state |ufifo_s|)) (_ BitVec 2) (bvsub (|ufifo#0| state) (|ufifo#17| state))) ; \f_fill
(define-fun |ufifo#35| ((state |ufifo_s|)) Bool (bvult (|ufifo#33| state) (|ufifo#34| state))) ; $lt$ufifo.v:193$123_Y
(define-fun |ufifo#36| ((state |ufifo_s|)) Bool (and (or  (|ufifo#35| state) false) (or  (|ufifo#10| state) false))) ; $logic_and$ufifo.v:193$125_Y
; yosys-smt2-memory fifo 2 8 3 1 sync
(declare-fun |ufifo#37#0| (|ufifo_s|) (Array (_ BitVec 2) (_ BitVec 8))) ; fifo
(define-fun |ufifo_m fifo| ((state |ufifo_s|)) (Array (_ BitVec 2) (_ BitVec 8)) (|ufifo#37#0| state))
(define-fun |ufifo_m:R0A fifo| ((state |ufifo_s|)) (_ BitVec 2) (|ufifo#13| state)) ; \rd_addr_next
(define-fun |ufifo#38| ((state |ufifo_s|)) (_ BitVec 8) (select (|ufifo#37#0| state) (|ufifo_m:R0A fifo| state))) ; $memrd$\fifo$ufifo.v:83$56_DATA
(define-fun |ufifo_m:R0D fifo| ((state |ufifo_s|)) (_ BitVec 8) (|ufifo#38| state))
(define-fun |ufifo_m:R1A fifo| ((state |ufifo_s|)) (_ BitVec 2) (|ufifo#31| state)) ; \f_const_addr
(define-fun |ufifo#39| ((state |ufifo_s|)) (_ BitVec 8) (select (|ufifo#37#0| state) (|ufifo_m:R1A fifo| state))) ; $memrd$\fifo$ufifo.v:192$120_DATA
(define-fun |ufifo_m:R1D fifo| ((state |ufifo_s|)) (_ BitVec 8) (|ufifo#39| state))
(define-fun |ufifo_m:R2A fifo| ((state |ufifo_s|)) (_ BitVec 2) (|ufifo#32| state)) ; \f_next_addr
(define-fun |ufifo#40| ((state |ufifo_s|)) (_ BitVec 8) (select (|ufifo#37#0| state) (|ufifo_m:R2A fifo| state))) ; $memrd$\fifo$ufifo.v:195$126_DATA
(define-fun |ufifo_m:R2D fifo| ((state |ufifo_s|)) (_ BitVec 8) (|ufifo#40| state))
; yosys-smt2-anyconst ufifo#41 8 ufifo.v:0.0-0.0 f_const_second
(declare-fun |ufifo#41| (|ufifo_s|) (_ BitVec 8)) ; \f_const_second
(define-fun |ufifo#42| ((state |ufifo_s|)) Bool (= (|ufifo#40| state) (|ufifo#41| state))) ; $eq$ufifo.v:195$127_Y
(define-fun |ufifo#43| ((state |ufifo_s|)) Bool (and (or  (|ufifo#36| state) false) (or  (|ufifo#42| state) false))) ; \f_second_in_fifo
(define-fun |ufifo_n f_second_in_fifo| ((state |ufifo_s|)) Bool (|ufifo#43| state))
; yosys-smt2-wire f_raddr_plus_one 2
(define-fun |ufifo#44| ((state |ufifo_s|)) (_ BitVec 2) (bvadd (|ufifo#17| state) #b01)) ; \f_raddr_plus_one
(define-fun |ufifo_n f_raddr_plus_one| ((state |ufifo_s|)) (_ BitVec 2) (|ufifo#44| state))
; yosys-smt2-wire f_past_valid 1
(define-fun |ufifo_n f_past_valid| ((state |ufifo_s|)) Bool false)
; yosys-smt2-wire f_next_addr 2
(define-fun |ufifo_n f_next_addr| ((state |ufifo_s|)) (_ BitVec 2) (|ufifo#32| state))
; yosys-smt2-wire f_first_in_fifo 1
(define-fun |ufifo#45| ((state |ufifo_s|)) (_ BitVec 2) (bvsub (|ufifo#31| state) (|ufifo#17| state))) ; \f_distance_to_first
(define-fun |ufifo#46| ((state |ufifo_s|)) Bool (bvult (|ufifo#45| state) (|ufifo#34| state))) ; $lt$ufifo.v:190$117_Y
(define-fun |ufifo#47| ((state |ufifo_s|)) Bool (and (or  (|ufifo#46| state) false) (or  (|ufifo#10| state) false))) ; $logic_and$ufifo.v:190$119_Y
; yosys-smt2-anyconst ufifo#48 8 ufifo.v:0.0-0.0 f_const_data
(declare-fun |ufifo#48| (|ufifo_s|) (_ BitVec 8)) ; \f_const_data
(define-fun |ufifo#49| ((state |ufifo_s|)) Bool (= (|ufifo#39| state) (|ufifo#48| state))) ; $eq$ufifo.v:192$121_Y
(define-fun |ufifo#50| ((state |ufifo_s|)) Bool (and (or  (|ufifo#47| state) false) (or  (|ufifo#49| state) false))) ; \f_first_in_fifo
(define-fun |ufifo_n f_first_in_fifo| ((state |ufifo_s|)) Bool (|ufifo#50| state))
; yosys-smt2-wire f_fill 2
(define-fun |ufifo_n f_fill| ((state |ufifo_s|)) (_ BitVec 2) (|ufifo#34| state))
; yosys-smt2-wire f_distance_to_second 2
(define-fun |ufifo_n f_distance_to_second| ((state |ufifo_s|)) (_ BitVec 2) (|ufifo#33| state))
; yosys-smt2-wire f_distance_to_first 2
(define-fun |ufifo_n f_distance_to_first| ((state |ufifo_s|)) (_ BitVec 2) (|ufifo#45| state))
; yosys-smt2-wire f_const_second 8
(define-fun |ufifo_n f_const_second| ((state |ufifo_s|)) (_ BitVec 8) (|ufifo#41| state))
; yosys-smt2-wire f_const_data 8
(define-fun |ufifo_n f_const_data| ((state |ufifo_s|)) (_ BitVec 8) (|ufifo#48| state))
; yosys-smt2-wire f_const_addr 2
(define-fun |ufifo_n f_const_addr| ((state |ufifo_s|)) (_ BitVec 2) (|ufifo#31| state))
; yosys-smt2-register cvr_filled 1
; yosys-smt2-wire cvr_filled 1
(declare-fun |ufifo#51| (|ufifo_s|) (_ BitVec 1)) ; \cvr_filled
(define-fun |ufifo_n cvr_filled| ((state |ufifo_s|)) Bool (= ((_ extract 0 0) (|ufifo#51| state)) #b1))
; yosys-smt2-register bypass_data 8
; yosys-smt2-wire bypass_data 8
(define-fun |ufifo_n bypass_data| ((state |ufifo_s|)) (_ BitVec 8) (|ufifo#24| state))
; yosys-smt2-register $formal$ufifo.v:164$8_CHECK 1
(declare-fun |ufifo#52| (|ufifo_s|) (_ BitVec 1)) ; $formal$ufifo.v:164$8_CHECK
(define-fun |ufifo_n $formal$ufifo.v:164$8_CHECK| ((state |ufifo_s|)) Bool (= ((_ extract 0 0) (|ufifo#52| state)) #b1))
; yosys-smt2-register $formal$ufifo.v:163$7_EN 1
(declare-fun |ufifo#53| (|ufifo_s|) (_ BitVec 1)) ; $formal$ufifo.v:163$7_EN
(define-fun |ufifo_n $formal$ufifo.v:163$7_EN| ((state |ufifo_s|)) Bool (= ((_ extract 0 0) (|ufifo#53| state)) #b1))
; yosys-smt2-register $formal$ufifo.v:163$7_CHECK 1
(declare-fun |ufifo#54| (|ufifo_s|) (_ BitVec 1)) ; $formal$ufifo.v:163$7_CHECK
(define-fun |ufifo_n $formal$ufifo.v:163$7_CHECK| ((state |ufifo_s|)) Bool (= ((_ extract 0 0) (|ufifo#54| state)) #b1))
(define-fun |ufifo#55| ((state |ufifo_s|)) Bool (and (or  (= ((_ extract 0 0) (|ufifo#51| state)) #b1) false) (or  (= ((_ extract 0 0) (|ufifo#3| state)) #b1) false))) ; $0$formal$ufifo.v:261$22_CHECK[0:0]$184
; yosys-smt2-cover 0 ufifo.v:261.13-262.38
(define-fun |ufifo_c 0| ((state |ufifo_s|)) Bool (and (|ufifo#55| state) true)) ; $cover$ufifo.v:261$208
; yosys-smt2-cover 1 ufifo.v:251.13-252.15
(define-fun |ufifo_c 1| ((state |ufifo_s|)) Bool (and (|ufifo#22| state) true)) ; $cover$ufifo.v:251$207
; yosys-smt2-cover 2 ufifo.v:247.13-248.25
(define-fun |ufifo_c 2| ((state |ufifo_s|)) Bool (and (|ufifo#10| state) true)) ; $cover$ufifo.v:247$206
; yosys-smt2-anyseq ufifo#56 1 $auto$setundef.cc:501:execute$444
(declare-fun |ufifo#56| (|ufifo_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2807:Anyseq$445
(define-fun |ufifo#57| ((state |ufifo_s|)) Bool (= (|ufifo#25| state) (|ufifo#41| state))) ; $eq$ufifo.v:234$173_Y
(define-fun |ufifo#58| ((state |ufifo_s|)) Bool (= (|ufifo#30| state) #b11)) ; $procmux$294_CMP
(define-fun |ufifo#59| ((state |ufifo_s|)) (_ BitVec 1) (ite (|ufifo#58| state) (ite (|ufifo#57| state) #b1 #b0) (|ufifo#56| state))) ; $0$formal$ufifo.v:233$19_CHECK[0:0]$163
(define-fun |ufifo#60| ((state |ufifo_s|)) (_ BitVec 1) (ite (|ufifo#58| state) #b1 #b0)) ; $0$formal$ufifo.v:231$17_EN[0:0]$160
; yosys-smt2-assert 0 ufifo.v:233.34-234.36
(define-fun |ufifo_a 0| ((state |ufifo_s|)) Bool (or (= ((_ extract 0 0) (|ufifo#59| state)) #b1) (not (= ((_ extract 0 0) (|ufifo#60| state)) #b1)))) ; $assert$ufifo.v:233$205
; yosys-smt2-anyseq ufifo#61 1 $auto$setundef.cc:501:execute$442
(declare-fun |ufifo#61| (|ufifo_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2807:Anyseq$443
(define-fun |ufifo#62| ((state |ufifo_s|)) Bool (= (|ufifo#17| state) (|ufifo#32| state))) ; $eq$ufifo.v:233$172_Y
(define-fun |ufifo#63| ((state |ufifo_s|)) (_ BitVec 1) (ite (|ufifo#58| state) (ite (|ufifo#62| state) #b1 #b0) (|ufifo#61| state))) ; $0$formal$ufifo.v:232$18_CHECK[0:0]$161
; yosys-smt2-assert 1 ufifo.v:232.28-233.33
(define-fun |ufifo_a 1| ((state |ufifo_s|)) Bool (or (= ((_ extract 0 0) (|ufifo#63| state)) #b1) (not (= ((_ extract 0 0) (|ufifo#60| state)) #b1)))) ; $assert$ufifo.v:232$204
; yosys-smt2-anyseq ufifo#64 1 $auto$setundef.cc:501:execute$440
(declare-fun |ufifo#64| (|ufifo_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2807:Anyseq$441
(define-fun |ufifo#65| ((state |ufifo_s|)) (_ BitVec 1) (ite (|ufifo#58| state) (ite (|ufifo#43| state) #b1 #b0) (|ufifo#64| state))) ; $0$formal$ufifo.v:231$17_CHECK[0:0]$159
; yosys-smt2-assert 2 ufifo.v:231.10-232.27
(define-fun |ufifo_a 2| ((state |ufifo_s|)) Bool (or (= ((_ extract 0 0) (|ufifo#65| state)) #b1) (not (= ((_ extract 0 0) (|ufifo#60| state)) #b1)))) ; $assert$ufifo.v:231$203
; yosys-smt2-anyseq ufifo#66 1 $auto$setundef.cc:501:execute$438
(declare-fun |ufifo#66| (|ufifo_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2807:Anyseq$439
(define-fun |ufifo#67| ((state |ufifo_s|)) Bool (= (|ufifo#30| state) #b10)) ; $procmux$283_CMP
(define-fun |ufifo#68| ((state |ufifo_s|)) (_ BitVec 1) (ite (|ufifo#67| state) (ite (|ufifo#43| state) #b1 #b0) (|ufifo#66| state))) ; $0$formal$ufifo.v:228$16_CHECK[0:0]$157
(define-fun |ufifo#69| ((state |ufifo_s|)) (_ BitVec 1) (ite (|ufifo#67| state) #b1 #b0)) ; $0$formal$ufifo.v:227$15_EN[0:0]$156
; yosys-smt2-assert 3 ufifo.v:228.27-229.27
(define-fun |ufifo_a 3| ((state |ufifo_s|)) Bool (or (= ((_ extract 0 0) (|ufifo#68| state)) #b1) (not (= ((_ extract 0 0) (|ufifo#69| state)) #b1)))) ; $assert$ufifo.v:228$202
; yosys-smt2-anyseq ufifo#70 1 $auto$setundef.cc:501:execute$436
(declare-fun |ufifo#70| (|ufifo_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2807:Anyseq$437
(define-fun |ufifo#71| ((state |ufifo_s|)) (_ BitVec 1) (ite (|ufifo#67| state) (ite (|ufifo#50| state) #b1 #b0) (|ufifo#70| state))) ; $0$formal$ufifo.v:227$15_CHECK[0:0]$155
; yosys-smt2-assert 4 ufifo.v:227.10-228.26
(define-fun |ufifo_a 4| ((state |ufifo_s|)) Bool (or (= ((_ extract 0 0) (|ufifo#71| state)) #b1) (not (= ((_ extract 0 0) (|ufifo#69| state)) #b1)))) ; $assert$ufifo.v:227$201
; yosys-smt2-anyseq ufifo#72 1 $auto$setundef.cc:501:execute$434
(declare-fun |ufifo#72| (|ufifo_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2807:Anyseq$435
; yosys-smt2-anyseq ufifo#73 1 $auto$setundef.cc:501:execute$432
(declare-fun |ufifo#73| (|ufifo_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2807:Anyseq$433
(define-fun |ufifo#74| ((state |ufifo_s|)) Bool (= (|ufifo#25| state) (|ufifo#48| state))) ; $eq$ufifo.v:225$171_Y
(define-fun |ufifo#75| ((state |ufifo_s|)) Bool (= (|ufifo#17| state) (|ufifo#31| state))) ; $eq$ufifo.v:205$134_Y
(define-fun |ufifo#76| ((state |ufifo_s|)) (_ BitVec 1) (ite (|ufifo#75| state) (ite (|ufifo#74| state) #b1 #b0) (|ufifo#73| state))) ; $procmux$277_Y
(define-fun |ufifo#77| ((state |ufifo_s|)) Bool (= (|ufifo#30| state) #b01)) ; $procmux$232_CMP
(define-fun |ufifo#78| ((state |ufifo_s|)) (_ BitVec 1) (ite (|ufifo#77| state) (|ufifo#76| state) (|ufifo#72| state))) ; $0$formal$ufifo.v:224$14_CHECK[0:0]$153
(define-fun |ufifo#79| ((state |ufifo_s|)) (_ BitVec 1) (ite (|ufifo#75| state) #b1 #b0)) ; $procmux$271_Y
(define-fun |ufifo#80| ((state |ufifo_s|)) (_ BitVec 1) (ite (|ufifo#77| state) (|ufifo#79| state) #b0)) ; $0$formal$ufifo.v:224$14_EN[0:0]$154
; yosys-smt2-assert 5 ufifo.v:224.31-225.34
(define-fun |ufifo_a 5| ((state |ufifo_s|)) Bool (or (= ((_ extract 0 0) (|ufifo#78| state)) #b1) (not (= ((_ extract 0 0) (|ufifo#80| state)) #b1)))) ; $assert$ufifo.v:224$200
; yosys-smt2-anyseq ufifo#81 1 $auto$setundef.cc:501:execute$430
(declare-fun |ufifo#81| (|ufifo_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2807:Anyseq$431
(define-fun |ufifo#82| ((state |ufifo_s|)) (_ BitVec 1) (ite (|ufifo#77| state) (ite (|ufifo#49| state) #b1 #b0) (|ufifo#81| state))) ; $0$formal$ufifo.v:222$13_CHECK[0:0]$151
(define-fun |ufifo#83| ((state |ufifo_s|)) (_ BitVec 1) (ite (|ufifo#77| state) #b1 #b0)) ; $0$formal$ufifo.v:218$9_EN[0:0]$144
; yosys-smt2-assert 6 ufifo.v:222.34-223.45
(define-fun |ufifo_a 6| ((state |ufifo_s|)) Bool (or (= ((_ extract 0 0) (|ufifo#82| state)) #b1) (not (= ((_ extract 0 0) (|ufifo#83| state)) #b1)))) ; $assert$ufifo.v:222$199
; yosys-smt2-anyseq ufifo#84 1 $auto$setundef.cc:501:execute$428
(declare-fun |ufifo#84| (|ufifo_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2807:Anyseq$429
(define-fun |ufifo#85| ((state |ufifo_s|)) Bool (= (|ufifo#0| state) (|ufifo#32| state))) ; $eq$ufifo.v:207$136_Y
(define-fun |ufifo#86| ((state |ufifo_s|)) (_ BitVec 1) (ite (|ufifo#77| state) (ite (|ufifo#85| state) #b1 #b0) (|ufifo#84| state))) ; $0$formal$ufifo.v:221$12_CHECK[0:0]$149
; yosys-smt2-assert 7 ufifo.v:221.29-222.33
(define-fun |ufifo_a 7| ((state |ufifo_s|)) Bool (or (= ((_ extract 0 0) (|ufifo#86| state)) #b1) (not (= ((_ extract 0 0) (|ufifo#83| state)) #b1)))) ; $assert$ufifo.v:221$198
; yosys-smt2-anyseq ufifo#87 1 $auto$setundef.cc:501:execute$426
(declare-fun |ufifo#87| (|ufifo_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2807:Anyseq$427
(define-fun |ufifo#88| ((state |ufifo_s|)) Bool (not (or  (|ufifo#43| state) false))) ; $logic_not$ufifo.v:221$166_Y
(define-fun |ufifo#89| ((state |ufifo_s|)) (_ BitVec 1) (ite (|ufifo#77| state) (ite (|ufifo#88| state) #b1 #b0) (|ufifo#87| state))) ; $0$formal$ufifo.v:220$11_CHECK[0:0]$147
; yosys-smt2-assert 8 ufifo.v:220.27-221.28
(define-fun |ufifo_a 8| ((state |ufifo_s|)) Bool (or (= ((_ extract 0 0) (|ufifo#89| state)) #b1) (not (= ((_ extract 0 0) (|ufifo#83| state)) #b1)))) ; $assert$ufifo.v:220$197
; yosys-smt2-anyseq ufifo#90 1 $auto$setundef.cc:501:execute$424
(declare-fun |ufifo#90| (|ufifo_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2807:Anyseq$425
(define-fun |ufifo#91| ((state |ufifo_s|)) (_ BitVec 1) (ite (|ufifo#77| state) (ite (|ufifo#50| state) #b1 #b0) (|ufifo#90| state))) ; $0$formal$ufifo.v:219$10_CHECK[0:0]$145
; yosys-smt2-assert 9 ufifo.v:219.27-220.26
(define-fun |ufifo_a 9| ((state |ufifo_s|)) Bool (or (= ((_ extract 0 0) (|ufifo#91| state)) #b1) (not (= ((_ extract 0 0) (|ufifo#83| state)) #b1)))) ; $assert$ufifo.v:219$196
; yosys-smt2-anyseq ufifo#92 1 $auto$setundef.cc:501:execute$422
(declare-fun |ufifo#92| (|ufifo_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2807:Anyseq$423
(define-fun |ufifo#93| ((state |ufifo_s|)) (_ BitVec 1) (ite (|ufifo#77| state) (ite (|ufifo#10| state) #b1 #b0) (|ufifo#92| state))) ; $0$formal$ufifo.v:218$9_CHECK[0:0]$143
; yosys-smt2-assert 10 ufifo.v:218.10-219.26
(define-fun |ufifo_a 10| ((state |ufifo_s|)) Bool (or (= ((_ extract 0 0) (|ufifo#93| state)) #b1) (not (= ((_ extract 0 0) (|ufifo#83| state)) #b1)))) ; $assert$ufifo.v:218$195
; yosys-smt2-assert 11 ufifo.v:164.28-165.31
(define-fun |ufifo_a 11| ((state |ufifo_s|)) Bool (or (= ((_ extract 0 0) (|ufifo#52| state)) #b1) (not (= ((_ extract 0 0) (|ufifo#53| state)) #b1)))) ; $assert$ufifo.v:164$194
; yosys-smt2-assert 12 ufifo.v:163.31-164.27
(define-fun |ufifo_a 12| ((state |ufifo_s|)) Bool (or (= ((_ extract 0 0) (|ufifo#54| state)) #b1) (not (= ((_ extract 0 0) (|ufifo#53| state)) #b1)))) ; $assert$ufifo.v:163$193
; yosys-smt2-anyseq ufifo#94 1 $auto$setundef.cc:501:execute$448
(declare-fun |ufifo#94| (|ufifo_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2807:Anyseq$449
(define-fun |ufifo#95| ((state |ufifo_s|)) Bool (not (or  (= ((_ extract 0 0) (|ufifo#12| state)) #b1) false))) ; $logic_not$ufifo.v:159$101_Y
(define-fun |ufifo#96| ((state |ufifo_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|ufifo#3| state)) #b1) (ite (|ufifo#95| state) #b1 #b0) (|ufifo#94| state))) ; $0$formal$ufifo.v:158$6_CHECK[0:0]$98
(define-fun |ufifo#97| ((state |ufifo_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|ufifo#3| state)) #b1) #b1 #b0)) ; $0$formal$ufifo.v:157$5_EN[0:0]$97
; yosys-smt2-assert 13 ufifo.v:158.19-159.22
(define-fun |ufifo_a 13| ((state |ufifo_s|)) Bool (or (= ((_ extract 0 0) (|ufifo#96| state)) #b1) (not (= ((_ extract 0 0) (|ufifo#97| state)) #b1)))) ; $assert$ufifo.v:158$192
; yosys-smt2-anyseq ufifo#98 1 $auto$setundef.cc:501:execute$446
(declare-fun |ufifo#98| (|ufifo_s|) (_ BitVec 1)) ; $auto$rtlil.cc:2807:Anyseq$447
(define-fun |ufifo#99| ((state |ufifo_s|)) Bool (not (or  (|ufifo#11| state) false))) ; $logic_not$ufifo.v:108$64_Y
(define-fun |ufifo#100| ((state |ufifo_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|ufifo#3| state)) #b1) (ite (|ufifo#99| state) #b1 #b0) (|ufifo#98| state))) ; $0$formal$ufifo.v:157$5_CHECK[0:0]$96
; yosys-smt2-assert 14 ufifo.v:157.7-158.18
(define-fun |ufifo_a 14| ((state |ufifo_s|)) Bool (or (= ((_ extract 0 0) (|ufifo#100| state)) #b1) (not (= ((_ extract 0 0) (|ufifo#97| state)) #b1)))) ; $assert$ufifo.v:157$191
(define-fun |ufifo#101| ((state |ufifo_s|)) Bool (= (|ufifo#44| state) (|ufifo#13| state))) ; $0$formal$ufifo.v:152$4_CHECK[0:0]$92
; yosys-smt2-assert 15 ufifo.v:152.13-153.44
(define-fun |ufifo_a 15| ((state |ufifo_s|)) Bool (or (|ufifo#101| state) (not true))) ; $assert$ufifo.v:152$190
(define-fun |ufifo#102| ((state |ufifo_s|)) Bool (and  (= ((_ extract 0 0) (|ufifo#34| state)) #b1) (= ((_ extract 1 1) (|ufifo#34| state)) #b1))) ; $procmux$225_CMP
(define-fun |ufifo#103| ((state |ufifo_s|)) Bool (= (|ufifo#4| state) (ite (|ufifo#102| state) #b1 #b0))) ; $0$formal$ufifo.v:147$3_CHECK[0:0]$86
; yosys-smt2-assert 16 ufifo.v:147.13-148.38
(define-fun |ufifo_a 16| ((state |ufifo_s|)) Bool (or (|ufifo#103| state) (not true))) ; $assert$ufifo.v:147$189
(define-fun |ufifo#104| ((state |ufifo_s|)) Bool (not (or  (= ((_ extract 0 0) (|ufifo#34| state)) #b1) (= ((_ extract 1 1) (|ufifo#34| state)) #b1)))) ; $eq$ufifo.v:145$83_Y
(define-fun |ufifo#105| ((state |ufifo_s|)) Bool (= (|ufifo#3| state) (ite (|ufifo#104| state) #b1 #b0))) ; $0$formal$ufifo.v:144$2_CHECK[0:0]$81
; yosys-smt2-assert 17 ufifo.v:144.13-145.42
(define-fun |ufifo_a 17| ((state |ufifo_s|)) Bool (or (|ufifo#105| state) (not true))) ; $assert$ufifo.v:144$188
(define-fun |ufifo#106| ((state |ufifo_s|)) Bool (= (|ufifo#18| state) (|ufifo#34| state))) ; $0$formal$ufifo.v:163$7_CHECK[0:0]$103
(define-fun |ufifo#107| ((state |ufifo_s|)) (_ BitVec 2) (bvnot (|ufifo#34| state))) ; $not$ufifo.v:165$108_Y
(define-fun |ufifo#108| ((state |ufifo_s|)) Bool (= (|ufifo#19| state) (|ufifo#107| state))) ; $0$formal$ufifo.v:164$8_CHECK[0:0]$105
(define-fun |ufifo#109| ((state |ufifo_s|)) (_ BitVec 1) (ite (|ufifo#102| state) #b1 (|ufifo#51| state))) ; $procmux$224_Y
(define-fun |ufifo#110| ((state |ufifo_s|)) (_ BitVec 1) (ite (|ufifo#27| state) #b0 (|ufifo#109| state))) ; $0\cvr_filled[0:0]
; yosys-smt2-anyseq ufifo#111 2 $auto$setundef.cc:501:execute$454
(declare-fun |ufifo#111| (|ufifo_s|) (_ BitVec 2)) ; $auto$rtlil.cc:2807:Anyseq$455
(define-fun |ufifo#112| ((state |ufifo_s|)) (_ BitVec 2) (ite (|ufifo#9| state) (|ufifo#0| state) (|ufifo#111| state))) ; $procmux$386_Y
; yosys-smt2-anyseq ufifo#113 2 $auto$setundef.cc:501:execute$456
(declare-fun |ufifo#113| (|ufifo_s|) (_ BitVec 2)) ; $auto$rtlil.cc:2807:Anyseq$457
(define-fun |ufifo#114| ((state |ufifo_s|)) (_ BitVec 2) (ite (|ufifo#27| state) (|ufifo#113| state) (|ufifo#112| state))) ; $0$memwr$\fifo$ufifo.v:54$1_ADDR[1:0]$42
; yosys-smt2-anyseq ufifo#115 8 $auto$setundef.cc:501:execute$450
(declare-fun |ufifo#115| (|ufifo_s|) (_ BitVec 8)) ; $auto$rtlil.cc:2807:Anyseq$451
(define-fun |ufifo#116| ((state |ufifo_s|)) (_ BitVec 8) (ite (|ufifo#9| state) (|ufifo#28| state) (|ufifo#115| state))) ; $procmux$381_Y
; yosys-smt2-anyseq ufifo#117 8 $auto$setundef.cc:501:execute$452
(declare-fun |ufifo#117| (|ufifo_s|) (_ BitVec 8)) ; $auto$rtlil.cc:2807:Anyseq$453
(define-fun |ufifo#118| ((state |ufifo_s|)) (_ BitVec 8) (ite (|ufifo#27| state) (|ufifo#117| state) (|ufifo#116| state))) ; $0$memwr$\fifo$ufifo.v:54$1_DATA[7:0]$43
(define-fun |ufifo#119| ((state |ufifo_s|)) (_ BitVec 1) (ite (|ufifo#9| state) #b1 #b0)) ; $procmux$376_Y [7]
(define-fun |ufifo#120| ((state |ufifo_s|)) (_ BitVec 1) (ite (|ufifo#27| state) #b0 (|ufifo#119| state))) ; $0$memwr$\fifo$ufifo.v:54$1_EN[7:0]$44 [7]
(define-fun |ufifo_m:W0A fifo| ((state |ufifo_s|)) (_ BitVec 2) (|ufifo#114| state)) ; $0$memwr$\fifo$ufifo.v:54$1_ADDR[1:0]$42
(define-fun |ufifo_m:W0D fifo| ((state |ufifo_s|)) (_ BitVec 8) (|ufifo#118| state)) ; $0$memwr$\fifo$ufifo.v:54$1_DATA[7:0]$43
(define-fun |ufifo_m:W0M fifo| ((state |ufifo_s|)) (_ BitVec 8) (concat (|ufifo#120| state) (concat (|ufifo#120| state) (concat (|ufifo#120| state) (concat (|ufifo#120| state) (concat (|ufifo#120| state) (concat (|ufifo#120| state) (concat (|ufifo#120| state) (|ufifo#120| state))))))))) ; { $0$memwr$\fifo$ufifo.v:54$1_EN[7:0]$44 [7] $0$memwr$\fifo$ufifo.v:54$1_EN[7:0]$44 [7] $0$memwr$\fifo$ufifo.v:54$1_EN[7:0]$44 [7] $0$memwr$\fifo$ufifo.v:54$1_EN[7:0]$44 [7] $0$memwr$\fifo$ufifo.v:54$1_EN[7:0]$44 [7] $0$memwr$\fifo$ufifo.v:54$1_EN[7:0]$44 [7] $0$memwr$\fifo$ufifo.v:54$1_EN[7:0]$44 [7] $0$memwr$\fifo$ufifo.v:54$1_EN[7:0]$44 [7] }
(define-fun |ufifo#37#1| ((state |ufifo_s|)) (Array (_ BitVec 2) (_ BitVec 8)) (store (|ufifo#37#0| state) (|ufifo_m:W0A fifo| state) (bvor (bvand (|ufifo_m:W0D fifo| state) (|ufifo_m:W0M fifo| state)) (bvand (select (|ufifo#37#0| state) (|ufifo_m:W0A fifo| state)) (bvnot (|ufifo_m:W0M fifo| state)))))) ; fifo
(define-fun |ufifo#121| ((state |ufifo_s|)) (_ BitVec 2) (ite (|ufifo#11| state) #b00 (|ufifo#30| state))) ; $procmux$305_Y
(define-fun |ufifo#122| ((state |ufifo_s|)) Bool (and (or  (|ufifo#11| state) false) (or  (|ufifo#75| state) false))) ; $logic_and$ufifo.v:205$135_Y
(define-fun |ufifo#123| ((state |ufifo_s|)) (_ BitVec 2) (ite (|ufifo#122| state) #b11 (|ufifo#30| state))) ; $procmux$309_Y
(define-fun |ufifo#124| ((state |ufifo_s|)) Bool (= (|ufifo#28| state) (|ufifo#41| state))) ; $eq$ufifo.v:208$138_Y
(define-fun |ufifo#125| ((state |ufifo_s|)) (_ BitVec 2) (ite (|ufifo#124| state) #b10 #b00)) ; $auto$wreduce.cc:468:run$420 [1:0]
(define-fun |ufifo#126| ((state |ufifo_s|)) Bool (and (or  (|ufifo#9| state) false) (or  (|ufifo#85| state) false))) ; $logic_and$ufifo.v:207$137_Y
(define-fun |ufifo#127| ((state |ufifo_s|)) (_ BitVec 2) (ite (|ufifo#126| state) (|ufifo#125| state) (|ufifo#30| state))) ; $procmux$312_Y
(define-fun |ufifo#128| ((state |ufifo_s|)) (_ BitVec 2) (ite (|ufifo#122| state) #b00 (|ufifo#127| state))) ; $procmux$315_Y
(define-fun |ufifo#129| ((state |ufifo_s|)) Bool (= (|ufifo#0| state) (|ufifo#31| state))) ; $eq$ufifo.v:203$130_Y
(define-fun |ufifo#130| ((state |ufifo_s|)) Bool (and (or  (|ufifo#9| state) false) (or  (|ufifo#129| state) false))) ; $logic_and$ufifo.v:203$131_Y
(define-fun |ufifo#131| ((state |ufifo_s|)) Bool (= (|ufifo#28| state) (|ufifo#48| state))) ; $eq$ufifo.v:203$132_Y
(define-fun |ufifo#132| ((state |ufifo_s|)) Bool (and (or  (|ufifo#130| state) false) (or  (|ufifo#131| state) false))) ; $logic_and$ufifo.v:203$133_Y
(define-fun |ufifo#133| ((state |ufifo_s|)) (_ BitVec 2) (ite (|ufifo#132| state) #b01 (|ufifo#30| state))) ; $procmux$318_Y
(define-fun |ufifo#134| ((state |ufifo_s|)) Bool (not (or  (= ((_ extract 0 0) (|ufifo#30| state)) #b1) (= ((_ extract 1 1) (|ufifo#30| state)) #b1)))) ; $procmux$320_CMP
(define-fun |ufifo#135| ((state |ufifo_s|)) (_ BitVec 2) (ite (|ufifo#134| state) (|ufifo#133| state) (ite (|ufifo#77| state) (|ufifo#128| state) (ite (|ufifo#67| state) (|ufifo#123| state) (ite (|ufifo#58| state) (|ufifo#121| state) (|ufifo#30| state)))))) ; $procmux$307_Y
(define-fun |ufifo#136| ((state |ufifo_s|)) (_ BitVec 2) (ite (|ufifo#27| state) #b00 (|ufifo#135| state))) ; $0\f_state[1:0]
(define-fun |ufifo#137| ((state |ufifo_s|)) (_ BitVec 8) (ite (|ufifo#26| state) (|ufifo#28| state) (|ufifo#24| state))) ; $0\bypass_data[7:0]
(define-fun |ufifo#138| ((state |ufifo_s|)) (_ BitVec 8) (ite (|ufifo#11| state) (|ufifo#38| state) (|ufifo#23| state))) ; $procmux$363_Y
(define-fun |ufifo#139| ((state |ufifo_s|)) (_ BitVec 8) (ite (|ufifo#27| state) (|ufifo#23| state) (|ufifo#138| state))) ; $0\fifo_data[7:0]
(define-fun |ufifo#140| ((state |ufifo_s|)) (_ BitVec 2) (bvsub (|ufifo#19| state) #b01)) ; $sub$ufifo.v:118$73_Y
(define-fun |ufifo#141| ((state |ufifo_s|)) Bool (and (or  (|ufifo#9| state) false) (or  (|ufifo#99| state) false))) ; $logic_and$ufifo.v:108$65_Y
(define-fun |ufifo#142| ((state |ufifo_s|)) (_ BitVec 2) (ite (|ufifo#141| state) (|ufifo#140| state) (|ufifo#19| state))) ; $procmux$332_Y
(define-fun |ufifo#143| ((state |ufifo_s|)) (_ BitVec 2) (bvadd (|ufifo#19| state) #b01)) ; $add$ufifo.v:116$70_Y
(define-fun |ufifo#144| ((state |ufifo_s|)) Bool (not (or  (|ufifo#9| state) false))) ; $logic_not$ufifo.v:106$61_Y
(define-fun |ufifo#145| ((state |ufifo_s|)) Bool (and (or  (|ufifo#144| state) false) (or  (|ufifo#11| state) false))) ; $logic_and$ufifo.v:106$62_Y
(define-fun |ufifo#146| ((state |ufifo_s|)) (_ BitVec 2) (ite (|ufifo#145| state) (|ufifo#143| state) (|ufifo#142| state))) ; $procmux$335_Y
(define-fun |ufifo#147| ((state |ufifo_s|)) (_ BitVec 2) (ite (|ufifo#27| state) #b11 (|ufifo#146| state))) ; $0\o_empty[1:0]
(define-fun |ufifo#148| ((state |ufifo_s|)) (_ BitVec 2) (bvadd (|ufifo#18| state) #b01)) ; $add$ufifo.v:109$66_Y
(define-fun |ufifo#149| ((state |ufifo_s|)) (_ BitVec 2) (ite (|ufifo#141| state) (|ufifo#148| state) (|ufifo#18| state))) ; $procmux$340_Y
(define-fun |ufifo#150| ((state |ufifo_s|)) (_ BitVec 2) (bvsub (|ufifo#18| state) #b01)) ; $sub$ufifo.v:107$63_Y
(define-fun |ufifo#151| ((state |ufifo_s|)) (_ BitVec 2) (ite (|ufifo#145| state) (|ufifo#150| state) (|ufifo#149| state))) ; $procmux$343_Y
(define-fun |ufifo#152| ((state |ufifo_s|)) (_ BitVec 2) (ite (|ufifo#27| state) #b00 (|ufifo#151| state))) ; $0\o_used[1:0]
(define-fun |ufifo#153| ((state |ufifo_s|)) (_ BitVec 2) (ite (|ufifo#11| state) (|ufifo#13| state) (|ufifo#17| state))) ; $procmux$368_Y
(define-fun |ufifo#154| ((state |ufifo_s|)) (_ BitVec 2) (ite (|ufifo#27| state) #b00 (|ufifo#153| state))) ; $0\rd_addr[1:0]
(define-fun |ufifo#155| ((state |ufifo_s|)) (_ BitVec 2) (bvadd (|ufifo#13| state) #b01)) ; $add$ufifo.v:82$55_Y
(define-fun |ufifo#156| ((state |ufifo_s|)) (_ BitVec 2) (ite (|ufifo#11| state) (|ufifo#155| state) (|ufifo#13| state))) ; $procmux$358_Y
(define-fun |ufifo#157| ((state |ufifo_s|)) (_ BitVec 2) (ite (|ufifo#27| state) #b01 (|ufifo#156| state))) ; $0\rd_addr_next[1:0]
(define-fun |ufifo#158| ((state |ufifo_s|)) (_ BitVec 1) (ite (|ufifo#7| state) #b0 (|ufifo#12| state))) ; $procmux$348_Y
(define-fun |ufifo#159| ((state |ufifo_s|)) (_ BitVec 1) (ite (|ufifo#26| state) #b1 (|ufifo#158| state))) ; $procmux$351_Y
(define-fun |ufifo#160| ((state |ufifo_s|)) (_ BitVec 1) (ite (|ufifo#27| state) #b0 (|ufifo#159| state))) ; $0\use_bypass[0:0]
(define-fun |ufifo#161| ((state |ufifo_s|)) Bool (or  (|ufifo#5| state) false  (|ufifo#20| state) false)) ; $logic_or$ufifo.v:41$27_Y
(define-fun |ufifo#162| ((state |ufifo_s|)) Bool (and (or  (|ufifo#161| state) false) (or  (= ((_ extract 0 0) (|ufifo#4| state)) #b1) false))) ; $logic_and$ufifo.v:41$28_Y
(define-fun |ufifo#163| ((state |ufifo_s|)) Bool (not (or  (|ufifo#5| state) false))) ; $logic_not$ufifo.v:42$30_Y
(define-fun |ufifo#164| ((state |ufifo_s|)) Bool (= (|ufifo#2| state) (|ufifo#17| state))) ; $eq$ufifo.v:42$31_Y
(define-fun |ufifo#165| ((state |ufifo_s|)) Bool (and (or  (|ufifo#163| state) false) (or  (|ufifo#164| state) false))) ; $logic_and$ufifo.v:42$32_Y
(define-fun |ufifo#166| ((state |ufifo_s|)) Bool (= (|ufifo#1| state) (|ufifo#17| state))) ; $eq$ufifo.v:43$33_Y
(define-fun |ufifo#167| ((state |ufifo_s|)) Bool (and (or  (|ufifo#5| state) false) (or  (|ufifo#166| state) false))) ; $logic_and$ufifo.v:43$34_Y
(define-fun |ufifo#168| ((state |ufifo_s|)) Bool (or  (|ufifo#165| state) false  (|ufifo#167| state) false)) ; $logic_or$ufifo.v:42$35_Y
(define-fun |ufifo#169| ((state |ufifo_s|)) Bool (and (or  (|ufifo#20| state) false) (or  (|ufifo#168| state) false))) ; $logic_and$ufifo.v:42$36_Y
(define-fun |ufifo#170| ((state |ufifo_s|)) Bool (or  (|ufifo#162| state) false  (|ufifo#169| state) false)) ; $logic_or$ufifo.v:41$37_Y
(define-fun |ufifo#171| ((state |ufifo_s|)) (_ BitVec 1) (ite (|ufifo#27| state) #b0 (ite (|ufifo#170| state) #b1 #b0))) ; $0\will_overflow[0:0]
(define-fun |ufifo#172| ((state |ufifo_s|)) Bool (and (or  (|ufifo#163| state) false) (or  (|ufifo#16| state) false))) ; $logic_and$ufifo.v:63$50_Y
(define-fun |ufifo#173| ((state |ufifo_s|)) (_ BitVec 1) (ite (|ufifo#27| state) #b1 (ite (|ufifo#172| state) #b1 #b0))) ; $0\will_underflow[0:0]
(define-fun |ufifo#174| ((state |ufifo_s|)) (_ BitVec 2) (ite (|ufifo#9| state) (|ufifo#2| state) (|ufifo#0| state))) ; $procmux$391_Y
(define-fun |ufifo#175| ((state |ufifo_s|)) (_ BitVec 2) (ite (|ufifo#27| state) #b00 (|ufifo#174| state))) ; $0\wr_addr[1:0]
(define-fun |ufifo_a| ((state |ufifo_s|)) Bool (and
  (|ufifo_a 0| state)
  (|ufifo_a 1| state)
  (|ufifo_a 2| state)
  (|ufifo_a 3| state)
  (|ufifo_a 4| state)
  (|ufifo_a 5| state)
  (|ufifo_a 6| state)
  (|ufifo_a 7| state)
  (|ufifo_a 8| state)
  (|ufifo_a 9| state)
  (|ufifo_a 10| state)
  (|ufifo_a 11| state)
  (|ufifo_a 12| state)
  (|ufifo_a 13| state)
  (|ufifo_a 14| state)
  (|ufifo_a 15| state)
  (|ufifo_a 16| state)
  (|ufifo_a 17| state)
))
(define-fun |ufifo_u| ((state |ufifo_s|)) Bool true)
(define-fun |ufifo_i| ((state |ufifo_s|)) Bool (and
  (= (|ufifo#0| state) #b00) ; wr_addr
  (= (= ((_ extract 0 0) (|ufifo#3| state)) #b1) true) ; will_underflow
  (= (= ((_ extract 0 0) (|ufifo#4| state)) #b1) false) ; will_overflow
  (= (= ((_ extract 0 0) (|ufifo#12| state)) #b1) false) ; use_bypass
  (= (|ufifo#13| state) #b01) ; rd_addr_next
  (= (|ufifo#17| state) #b00) ; rd_addr
  (= (|ufifo#18| state) #b00) ; o_used
  (= (|ufifo#19| state) #b11) ; o_empty
  (= (|ufifo#30| state) #b00) ; f_state
  (= (= ((_ extract 0 0) (|ufifo#51| state)) #b1) false) ; cvr_filled
  (= (= ((_ extract 0 0) (|ufifo#53| state)) #b1) false) ; $formal$ufifo.v:163$7_EN
))
(define-fun |ufifo_h| ((state |ufifo_s|)) Bool true)
(define-fun |ufifo_t| ((state |ufifo_s|) (next_state |ufifo_s|)) Bool (and
  (= (ite (|ufifo#106| state) #b1 #b0) (|ufifo#54| next_state)) ; $procdff$401 $formal$ufifo.v:163$7_CHECK
  (= #b1 (|ufifo#53| next_state)) ; $procdff$402 $formal$ufifo.v:163$7_EN
  (= (ite (|ufifo#108| state) #b1 #b0) (|ufifo#52| next_state)) ; $procdff$403 $formal$ufifo.v:164$8_CHECK
  (= (|ufifo#110| state) (|ufifo#51| next_state)) ; $procdff$399 \cvr_filled
  (= (|ufifo#48| state) (|ufifo#48| next_state)) ; $anyconst$111 \f_const_data
  (= (|ufifo#41| state) (|ufifo#41| next_state)) ; $anyconst$112 \f_const_second
  (= (|ufifo#37#1| state) (|ufifo#37#0| next_state)) ; fifo
  (= (|ufifo#31| state) (|ufifo#31| next_state)) ; $anyconst$110 \f_const_addr
  (= (|ufifo#136| state) (|ufifo#30| next_state)) ; $procdff$400 \f_state
  (= (|ufifo#137| state) (|ufifo#24| next_state)) ; $procdff$409 \bypass_data
  (= (|ufifo#139| state) (|ufifo#23| next_state)) ; $procdff$411 \fifo_data
  (= (|ufifo#147| state) (|ufifo#19| next_state)) ; $procdff$406 \o_empty
  (= (|ufifo#152| state) (|ufifo#18| next_state)) ; $procdff$407 \o_used
  (= (|ufifo#154| state) (|ufifo#17| next_state)) ; $procdff$410 \rd_addr
  (= (|ufifo#157| state) (|ufifo#13| next_state)) ; $procdff$412 \rd_addr_next
  (= (|ufifo#160| state) (|ufifo#12| next_state)) ; $procdff$408 \use_bypass
  (= (|ufifo#171| state) (|ufifo#4| next_state)) ; $procdff$418 \will_overflow
  (= (|ufifo#173| state) (|ufifo#3| next_state)) ; $procdff$413 \will_underflow
  (= (|ufifo#175| state) (|ufifo#0| next_state)) ; $procdff$414 \wr_addr
)) ; end of module ufifo
; yosys-smt2-topmod ufifo
; end of yosys output
